# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
commands: 
  print_from_command:
    parameters: 
      id:
        type: string
    steps:
      - run: 
          echo << parameters.id >>
          echo ${CIRCLE_WORKFLOW_ID}
                "Printed from command function"
jobs:
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo hello123
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo NiteshK
      #- run: exit 1
      - run: 
          name: on error
          command: echo "On Error - Check your code Nitesh"
          When: on_fail
  test_env_variable:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
         name: "echo an env var that is part of our project"
         command: 
          echo $CIRCLE_USERNAME
               $CIRCLE_BUILD_NUM
               $CIRCLE_BUILD_URL
               $CIRCLE_WORKFLOW_ID
  print_to_workspace:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: echo "Hi Nitesh, this message is stored in workspace" > ~/output.txt
      - persist_to_workspace: 
          root: ~/
          paths: output.txt

  print_from_workspace:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace: 
          at: ~/
      - run: cat ~/output.txt

  print_from_command_job:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_from_command:
          id: << pipeline.id >>

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    # test comment
    jobs:
      - welcome/run
      - print_hello
      - print_world:
          requires:
            - print_hello
      - test_env_variable:
          requires:
            - print_world
      - print_to_workspace
      - print_from_workspace: 
          requires: 
            - print_to_workspace
      - print_from_command_job